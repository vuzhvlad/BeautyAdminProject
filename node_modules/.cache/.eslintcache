[{"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/index.tsx":"1","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/app/App.tsx":"2","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/header/Header.tsx":"3","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/schedule/SchedulePage.tsx":"4","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/calendar/Calendar.tsx":"5","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/createAppointmentForm/CAForm.tsx":"6","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentList/AppointmentList.tsx":"7","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentItem.tsx/AppointmentItem.tsx":"8","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/services/AppointmentService.ts":"9","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/utils/hasRequiredFields.ts":"10","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/hooks/htttp.hook.ts":"11","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/AppointmentsContext.tsx":"12","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/reducer.ts":"13","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/actions.ts":"14"},{"size":219,"mtime":1683202289000,"results":"15","hashOfConfig":"16"},{"size":596,"mtime":1709125569842,"results":"17","hashOfConfig":"16"},{"size":436,"mtime":1683204237000,"results":"18","hashOfConfig":"16"},{"size":539,"mtime":1709112067164,"results":"19","hashOfConfig":"16"},{"size":119,"mtime":1683221059000,"results":"20","hashOfConfig":"16"},{"size":1101,"mtime":1683819902000,"results":"21","hashOfConfig":"16"},{"size":659,"mtime":1709126813682,"results":"22","hashOfConfig":"16"},{"size":1685,"mtime":1709127752020,"results":"23","hashOfConfig":"16"},{"size":1565,"mtime":1709126963329,"results":"24","hashOfConfig":"16"},{"size":346,"mtime":1708884389939,"results":"25","hashOfConfig":"16"},{"size":1540,"mtime":1709125569163,"results":"26","hashOfConfig":"16"},{"size":2598,"mtime":1709111635813,"results":"27","hashOfConfig":"16"},{"size":757,"mtime":1709125568553,"results":"28","hashOfConfig":"16"},{"size":775,"mtime":1709125570625,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"jq71bm",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"33"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/index.tsx",[],[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/app/App.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/header/Header.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/schedule/SchedulePage.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/calendar/Calendar.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/createAppointmentForm/CAForm.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentList/AppointmentList.tsx",["74","75","76"],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentItem.tsx/AppointmentItem.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/services/AppointmentService.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/utils/hasRequiredFields.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/hooks/htttp.hook.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/AppointmentsContext.tsx",["77"],[],"import React, { createContext, useReducer } from \"react\";\nimport reducer, { IInitialState } from \"./reducer\";\n\nimport useAppointmentService from \"../../services/AppointmentService\";\n\nimport { ActionsTypes } from \"./actions\";\n\nconst initialState: IInitialState = {\n  allAppointments: [],\n  activeAppointments: [],\n};\n\ninterface ProviderProps {\n  children: React.ReactNode;\n}\n\ninterface AppointmentContextValue extends IInitialState {\n  // special type for context\n  getAppointments: () => void; // nothing to return so it is void\n  getActiveAppointments: () => void;\n}\n\nexport const AppointmentContext = createContext<AppointmentContextValue>({\n  // creating the initial state of context which will be overwritten by provider\n  allAppointments: initialState.allAppointments, // we take our type from initialState\n  activeAppointments: initialState.activeAppointments, // so when it changes it will show us mistake\n  getAppointments: () => {},\n  getActiveAppointments: () => {},\n});\n\nconst AppointmentContextProvider = ({ children }: ProviderProps) => {\n  const [state, dispatch] = useReducer(reducer, initialState); // 1-function reducer, 2-initialState\n  const { loadingStatus, getAllAppointments, getAllActiveAppointments } =\n    useAppointmentService(); // getting our service\n\n  const value: AppointmentContextValue = {\n    // it should be the same type as context\n    allAppointments: state.allAppointments,\n    activeAppointments: state.activeAppointments,\n    getAppointments: () => {\n      getAllAppointments().then(\n        (\n          data // we get our date with service\n        ) =>\n          dispatch({ type: ActionsTypes.SET_ALL_APPOINTMENTS, payload: data }) // this will trigger a reducer and it will use the right case for it\n      ); // dispatch takes these data to the state, so as payload it will take data\n    },\n    getActiveAppointments: () => {\n      getAllActiveAppointments().then((data) => {\n        dispatch({ type: ActionsTypes.SET_ACTIVE_APPOINTMENTS, payload: data });\n      });\n    },\n  };\n  // it will work on the components that are inside of the context and you can use methods that are inside of the value\n\n  return (\n    // .Provider - provides for what is inside, everything that is passed inside will go further\n    <AppointmentContext.Provider\n      value={value} /*all states actions that we created */\n    >\n      {children}\n    </AppointmentContext.Provider>\n  );\n};\n\nexport default AppointmentContextProvider;\n\n//useReducer for state, function reducer for changing it\n// dispatch takes object in itself\n// dispatch => action => reducer that changes state\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/reducer.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/actions.ts",[],[],{"ruleId":"78","severity":1,"message":"79","line":8,"column":5,"nodeType":"80","messageId":"81","endLine":8,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":10,"column":5,"nodeType":"80","messageId":"81","endLine":10,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":16,"column":6,"nodeType":"85","endLine":16,"endColumn":8,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"87","line":33,"column":11,"nodeType":"80","messageId":"81","endLine":33,"endColumn":24},"@typescript-eslint/no-unused-vars","'allAppointments' is assigned a value but never used.","Identifier","unusedVar","'getAppointments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActiveAppointments'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'loadingStatus' is assigned a value but never used.",{"desc":"89","fix":"90"},"Update the dependencies array to be: [getActiveAppointments]",{"range":"91","text":"92"},[429,431],"[getActiveAppointments]"]