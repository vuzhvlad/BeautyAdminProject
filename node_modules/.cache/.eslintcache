[{"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/index.tsx":"1","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/app/App.tsx":"2","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/header/Header.tsx":"3","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/schedule/SchedulePage.tsx":"4","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/calendar/Calendar.tsx":"5","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/createAppointmentForm/CAForm.tsx":"6","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentList/AppointmentList.tsx":"7","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentItem.tsx/AppointmentItem.tsx":"8","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/services/AppointmentService.ts":"9","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/utils/hasRequiredFields.ts":"10","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/hooks/htttp.hook.ts":"11","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/AppointmentsContext.tsx":"12","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/reducer.ts":"13","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/actions.ts":"14","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/spinner/Spinner.tsx":"15","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/error/Error.tsx":"16","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/modal/CancelModal.tsx":"17","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/portal/portal.tsx":"18","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/history/HistoryPage.tsx":"19","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/historyList/HistoryList.tsx":"20","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/404/404.tsx":"21"},{"size":219,"mtime":1683202289000,"results":"22","hashOfConfig":"23"},{"size":1062,"mtime":1710163630836,"results":"24","hashOfConfig":"23"},{"size":912,"mtime":1710163342319,"results":"25","hashOfConfig":"23"},{"size":539,"mtime":1709112067164,"results":"26","hashOfConfig":"23"},{"size":682,"mtime":1710325145798,"results":"27","hashOfConfig":"23"},{"size":3147,"mtime":1710151422503,"results":"28","hashOfConfig":"23"},{"size":1539,"mtime":1710171374644,"results":"29","hashOfConfig":"23"},{"size":2882,"mtime":1710168146016,"results":"30","hashOfConfig":"23"},{"size":2743,"mtime":1710168556931,"results":"31","hashOfConfig":"23"},{"size":346,"mtime":1708884389939,"results":"32","hashOfConfig":"23"},{"size":1624,"mtime":1710151751699,"results":"33","hashOfConfig":"23"},{"size":3148,"mtime":1710324948374,"results":"34","hashOfConfig":"23"},{"size":1465,"mtime":1710324852796,"results":"35","hashOfConfig":"23"},{"size":1291,"mtime":1710324876102,"results":"36","hashOfConfig":"23"},{"size":2108,"mtime":1683236884000,"results":"37","hashOfConfig":"23"},{"size":1664,"mtime":1710170967324,"results":"38","hashOfConfig":"23"},{"size":3146,"mtime":1709798604737,"results":"39","hashOfConfig":"23"},{"size":1344,"mtime":1709717852214,"results":"40","hashOfConfig":"23"},{"size":429,"mtime":1710167889350,"results":"41","hashOfConfig":"23"},{"size":942,"mtime":1710167892944,"results":"42","hashOfConfig":"23"},{"size":441,"mtime":1710165357014,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"jq71bm",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"47"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"47"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/index.tsx",[],[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/app/App.tsx",["113"],[],"import {\n  createBrowserRouter,\n  Router,\n  Outlet,\n  RouterProvider,\n} from \"react-router-dom\";\nimport Header from \"../header/Header\";\nimport SchedulePage from \"../../pages/schedule/SchedulePage\";\nimport AppointmentContextProvider from \"../../context/appointments/AppointmentsContext\";\nimport HistoryPage from \"../../pages/history/HistoryPage\";\nimport PageNotFound from \"../../pages/404/404\";\n\nimport \"./app.scss\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Root />,\n    errorElement: <PageNotFound />,\n    children: [\n      {\n        path: \"/\",\n        element: <SchedulePage />,\n      },\n      {\n        path: \"/schedule\",\n        element: <SchedulePage />,\n      },\n      {\n        path: \"/history\",\n        element: <HistoryPage />,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nfunction Root() {\n  return (\n    <main className=\"board\">\n      <Header />\n      <AppointmentContextProvider>\n        <Outlet />\n      </AppointmentContextProvider>\n    </main>\n  );\n}\n\nexport default App;\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/header/Header.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/schedule/SchedulePage.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/calendar/Calendar.tsx",["114","115"],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/createAppointmentForm/CAForm.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentList/AppointmentList.tsx",["116"],[],"import { useContext, useEffect, useState, useCallback } from \"react\";\n\nimport AppointmentItem from \"../appointmentItem.tsx/AppointmentItem\";\nimport Spinner from \"../spinner/Spinner\";\nimport Error from \"../error/Error\";\nimport CancelModal from \"../modal/CancelModal\";\n\nimport { AppointmentContext } from \"../../context/appointments/AppointmentsContext\";\n\nfunction AppointmentList() {\n  const {\n    activeAppointments,\n    getActiveAppointments,\n    appointmentLoadingStatus,\n  } = useContext(AppointmentContext);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedId, selectId] = useState(0);\n\n  useEffect(() => {\n    getActiveAppointments();\n  }, []);\n\n  const handleOpenModal = useCallback((id: number) => {\n    setIsOpen(true);\n    selectId(id);\n  }, []);\n\n  if (appointmentLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (appointmentLoadingStatus === \"error\") {\n    return (\n      <>\n        <Error msg={'123'}/>\n        <button className=\"schedule__reload\" onClick={getActiveAppointments}>\n          Try to reload\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {activeAppointments.map((item) => {\n        return (\n          <AppointmentItem\n            {...item}\n            key={item.id}\n            openModal={handleOpenModal}\n            getActiveAppointments={getActiveAppointments}\n          />\n        );\n      })}\n      <CancelModal\n        handleClose={setIsOpen}\n        selectedId={selectedId}\n        isOpen={isOpen}\n      />\n    </>\n  );\n}\n\nexport default AppointmentList;\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/appointmentItem.tsx/AppointmentItem.tsx",["117"],[],"import { useEffect, useState, memo } from \"react\";\nimport \"./appointmentItem.scss\";\nimport dayjs from \"dayjs\";\nimport { Optional } from \"utility-types\";\nimport { IAppointment } from \"../../shared/interfaces/appointment.interface\";\n\n// type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>; // choose one key from I and make it optional and then & with this interface where that key from I is removed\n\ntype AppointmentProps = Optional<IAppointment, \"canceled\"> & {\n  openModal?: (id: number) => void;\n  getActiveAppointments?: () => void;\n};\n\nconst AppointmentItem = memo(\n  // putting this component into memo so if props dont change it doesnt have ot rerender\n  //every item is memorized and doesnt rerender if it is not needed\n  ({\n    id,\n    name,\n    date,\n    service,\n    phone,\n    canceled,\n    openModal,\n    getActiveAppointments,\n  }: AppointmentProps) => {\n    const [timeLeft, setTimeLeft] = useState<string | null>(null);\n\n    useEffect(() => {\n      // instead of undefined there will be current date\n      setTimeLeft(\n        `${dayjs(date).diff(undefined, \"h\")}:${\n          dayjs(date).diff(undefined, \"m\") % 60\n        }`\n      );\n\n      const intervalId = setInterval(() => {\n        if (dayjs(date).diff(undefined, \"m\") <= 0) {\n          // if time is less or equals to 0\n          if (getActiveAppointments) {\n            getActiveAppointments(); // we get active appointments again so time wont go below zero\n          }\n          clearInterval(intervalId);\n        } else {\n          setTimeLeft(\n            `${dayjs(date).diff(undefined, \"h\")}:${\n              dayjs(date).diff(undefined, \"m\") % 60\n            }`\n          );\n        }\n      }, 60000);\n    }, [date]);\n\n    const formattedDate = dayjs(date).format(\"DD/MM/YYYY HH:mm\"); // formating date by using dayjs\n    return (\n      <div className=\"appointment\">\n        <div className=\"appointment__info\">\n          <span className=\"appointment__date\">Date: {formattedDate}</span>\n          <span className=\"appointment__name\">Name: {name}</span>\n          <span className=\"appointment__service\">Service: {service}</span>\n          <span className=\"appointment__phone\">Phone: {phone}</span>\n        </div>\n        {!canceled && openModal ? (\n          <>\n            <div className=\"appointment__time\">\n              <span>Time left:</span>\n              <span className=\"appointment__timer\">{timeLeft}</span>\n            </div>\n            <button\n              className=\"appointment__cancel\"\n              onClick={() => {\n                if (openModal) {\n                  openModal(id);\n                }\n              }}\n            >\n              Cancel\n            </button>\n          </>\n        ) : null}\n        {canceled ? (\n          <div className=\"appointment__canceled\">Canceled</div>\n        ) : null}\n      </div>\n    );\n  }\n);\n\nexport default AppointmentItem;\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/services/AppointmentService.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/utils/hasRequiredFields.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/hooks/htttp.hook.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/AppointmentsContext.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/reducer.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/context/appointments/actions.ts",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/spinner/Spinner.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/error/Error.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/modal/CancelModal.tsx",["118"],[],"import Portal from \"../portal/portal\";\nimport { useEffect, useRef, useState, useContext } from \"react\";\nimport useAppointmentService from \"../../services/AppointmentService\";\nimport { AppointmentContext } from \"../../context/appointments/AppointmentsContext\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./modal.scss\";\n\ninterface IModalProps {\n  handleClose: (state: boolean) => void;\n  selectedId: number;\n  isOpen: boolean;\n}\n\nfunction CancelModal({ handleClose, selectedId, isOpen }: IModalProps) {\n  const { getActiveAppointments } = useContext(AppointmentContext);\n  const { cancelOneAppointment } = useAppointmentService();\n\n  const nodeRef = useRef<HTMLDivElement>(null); // connecting ref with html element for transtiion\n  const cancelStatusRef = useRef<boolean | null>(null);\n\n  const [buttonDisabled, setButtonDisabled] = useState<boolean>(false);\n  const [cancelStatus, setCancelStatus] = useState<boolean | null>(null);\n\n  const handleCancelAppointment = (id: number) => {\n    setButtonDisabled(true); // disable button so user can press more than once\n    cancelOneAppointment(id)\n      .then(() => {\n        console.log(\"done\");\n        setCancelStatus(true);\n      })\n      .catch(() => {\n        console.log(\"error\");\n        setCancelStatus(false);\n        setButtonDisabled(false);\n      });\n  };\n\n  const closeModal = () => {\n    handleClose(false);\n    if (cancelStatus === true || cancelStatusRef.current) {\n      getActiveAppointments();\n    }\n  };\n\n  const closeOnEscKey = (e: KeyboardEvent): void => {\n    // function for changing state if pressing key Esc\n    if (e.key === \"Escape\") {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    cancelStatusRef.current = cancelStatus;\n  }, [cancelStatus]);\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", closeOnEscKey); // adding listener\n\n    return () => {\n      document.body.removeEventListener(\"keydown\", closeOnEscKey); // removing\n    };\n  }, [handleClose]);\n\n  return (\n    <Portal>\n      <CSSTransition\n        in={isOpen}\n        timeout={{ enter: 500, exit: 500 }}\n        unmountOnExit\n        classNames={\"modal\"}\n        nodeRef={nodeRef}\n      >\n        <div className=\"modal\" ref={nodeRef}>\n          <div className=\"modal__body\">\n            <span className=\"modal__title\">\n              Are you sure you want to delete the appointment? {selectedId}\n            </span>\n            <div className=\"modal__btns\">\n              <button\n                className=\"modal__ok\"\n                disabled={buttonDisabled}\n                onClick={() => handleCancelAppointment(selectedId)}\n              >\n                Ok\n              </button>\n              <button className=\"modal__close\" onClick={() => closeModal()}>\n                Close\n              </button>\n            </div>\n            <div className=\"modal__status\">\n              {cancelStatus === null\n                ? \"\"\n                : cancelStatus\n                ? \"Success\"\n                : \"Error, please try again...\"}\n            </div>\n          </div>\n        </div>\n      </CSSTransition>\n    </Portal>\n  );\n}\n\nexport default CancelModal;\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/portal/portal.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/history/HistoryPage.tsx",[],[],"/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/components/historyList/HistoryList.tsx",["119"],[],"import { useContext, useEffect } from \"react\";\nimport { AppointmentContext } from \"../../context/appointments/AppointmentsContext\";\nimport AppointmentItem from \"../appointmentItem.tsx/AppointmentItem\";\nimport Spinner from \"../spinner/Spinner\";\nimport Error from \"../error/Error\";\n\nfunction HistoryList() {\n  const { allAppointments, getAppointments, appointmentLoadingStatus } =\n    useContext(AppointmentContext);\n\n  useEffect(() => {\n    getAppointments();\n  }, []);\n\n  if (appointmentLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (appointmentLoadingStatus === \"error\") {\n    return (\n      <>\n        <Error />\n        <button className=\"schedule__reload\" onClick={getAppointments}>\n          Try to reload\n        </button>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {allAppointments.map((item) => {\n        return <AppointmentItem {...item} key={item.id} />;\n      })}\n    </>\n  );\n}\n\nexport default HistoryList;\n","/Users/vuzhvlad/Desktop/devStudy/TypeScript/projectBeautyAdmin ReactTS/src/pages/404/404.tsx",[],[],{"ruleId":"120","severity":1,"message":"121","line":3,"column":3,"nodeType":"122","messageId":"123","endLine":3,"endColumn":9},{"ruleId":"120","severity":1,"message":"124","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":11},{"ruleId":"120","severity":1,"message":"125","line":11,"column":6,"nodeType":"122","messageId":"123","endLine":11,"endColumn":11},{"ruleId":"126","severity":1,"message":"127","line":22,"column":6,"nodeType":"128","endLine":22,"endColumn":8,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":52,"column":8,"nodeType":"128","endLine":52,"endColumn":14,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":62,"column":6,"nodeType":"128","endLine":62,"endColumn":19,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":13,"column":6,"nodeType":"128","endLine":13,"endColumn":8,"suggestions":"135"},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Value' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActiveAppointments'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'getActiveAppointments'. Either include it or remove the dependency array. If 'getActiveAppointments' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["137"],"React Hook useEffect has a missing dependency: 'closeOnEscKey'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'getAppointments'. Either include it or remove the dependency array.",["139"],{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getActiveAppointments]",{"range":"148","text":"149"},"Update the dependencies array to be: [date, getActiveAppointments]",{"range":"150","text":"151"},"Update the dependencies array to be: [closeOnEscKey, handleClose]",{"range":"152","text":"153"},"Update the dependencies array to be: [getAppointments]",{"range":"154","text":"155"},[661,663],"[getActiveAppointments]",[1706,1712],"[date, getActiveAppointments]",[1963,1976],"[closeOnEscKey, handleClose]",[464,466],"[getAppointments]"]